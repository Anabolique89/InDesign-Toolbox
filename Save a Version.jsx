//// Save a Version// v 1.0// by John Pobojewski, 2014//// Dynamically assigns metadata to backsave a version for any original file//if (app.documents.length == 0){	alert("Please open a document.");} else {	app.doScript (main, ScriptLanguage.JAVASCRIPT, undefined, UndoModes.entireScript, "Save a Version");	}function main(){	var _doc = app.activeDocument;	var d;	var filenameField, versionTypeField, authorIDField, resetVersionFolderField;	var postfix = "";	// get folder 	if (_doc.extractLabel("versionFolder") == ""){		var versionFolder = undefined;	} else {		var versionFolder = _doc.extractLabel("versionFolder");		var test = new Folder(versionFolder);		if (test.exists){			versionFolder = test;		} else {			versionFolder = undefined;			}	}	// get base filename	if (_doc.extractLabel("originalFile") == ""){		var filename = _doc.name;		_doc.insertLabel("originalFile", filename);	} else {		var filename = _doc.extractLabel("originalFile");	}	// get initials	if (_doc.extractLabel("authorID") == ""){		var authorID = "";	} else {		var authorID = _doc.extractLabel("authorID");	}	// get version number	if (_doc.extractLabel("versionNumber") == ""){		var versionNumber = "1";	} else {		var versionNumber = _doc.extractLabel("versionNumber");	}		with(d = app.dialogs.add({name:"Save version " + versionNumber + " of " + filename})){		with(dialogColumns.add()){			with(borderPanels.add()){				staticTexts.add({staticLabel:"Filename", minWidth: 100});				filenameField = textEditboxes.add({editContents:filename, minWidth: 200});			}			with(borderPanels.add()){				staticTexts.add({staticLabel:"Style", minWidth: 100});				with(versionTypeField = radiobuttonGroups.add()){					radiobuttonControls.add({staticLabel:"Date Stamp + Version", checkedState:true, minWidth: 200});					radiobuttonControls.add({staticLabel:"Version Only"});				}			}				with(borderPanels.add()){				staticTexts.add({staticLabel:"Author Initials", minWidth: 100});				authorIDField = textEditboxes.add({editContents:authorID, minWidth: 200});			}			with(dialogRows.add()){				resetVersionFolderField = checkboxControls.add({staticLabel:"Reset version folder location?", minWidth: 200});			}							}	}	var r = d.show();	if (r == true){		// update base filename if it changed		if (filename != filenameField.editContents){			var filename = filenameField.editContents;			_doc.insertLabel("originalFile", filenameField.editContents);		}		// increase version number		var version = increaseVersionNumber(_doc, 1);		// set path for repository of files		if (versionFolder == undefined || resetVersionFolderField.checkedState){			var path     = Folder.selectDialog();			_doc.insertLabel("versionFolder", path.fullName);		} else {			var path     = versionFolder;			}		// set date stamp		switch(versionTypeField.selectedButton){			case 0:				var date       = new Date();				var dateString = date.getFullYear().toString().substring(2, 4) + checkLeadingZero(date.getMonth() + 1) + checkLeadingZero( date.getDate() );				postfix = "-" + dateString + "-" + version;				break;			case 1:				postfix = "-" + version;				break;		}		// get authorID		if (authorIDField.editContents == ""){			authorID = "";		} else {			authorID = authorIDField.editContents;			_doc.insertLabel("authorID", authorID);			postfix += "-" + authorID;		}				// save a copy		_doc.saveACopy(new File(path + "/" + filename + postfix + ".indd"));		// done		alert("Complete!");	}	//Remove the dialog from memory.	d.destroy();	}function increaseVersionNumber(doc, amt){	var n;	if (doc.extractLabel("versionNumber") == ""){		n = 1;		doc.insertLabel("versionNumber", "1");	} else {		var a = doc.extractLabel("versionNumber");		var b = parseInt(a);		n = b + amt;		doc.insertLabel("versionNumber", n.toString());	}	return n;}function checkLeadingZero(num){	if (parseInt(num) < 10.0){		return "0" + num;	} else {		return num;	}}